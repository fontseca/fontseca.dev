package pages

import (
  "fontseca.dev/transfer"
  "fontseca.dev/model"
  "fontseca.dev/components/layout"
  "fontseca.dev/components/ui"
  "strconv"
  "fmt"
)

templ Archive(articles []*transfer.Article, publications []*transfer.Publication, topics []*model.Topic, tags []*model.Tag, search string, publication *transfer.Publication, topic *model.Topic, tag *model.Tag) {
  @layout.Layout("archive", 3) {
    <section class="archive">
      @ui.TitleHeader("archive", "/archive.articles.list?page=1&rpp=5&search=")
      <section class="archive-content">
        <div class="archive-content-main">
          <section class="topic-and-search">
            <h3 class={ "topic-and-date", templ.KV("hide", nil != tag) }>
              <span class="selected-topic">
                if nil != topic {
                  { topic.Name }
                }
              </span>
              <span class="selected-date">
                if nil != publication && 0 != int(publication.Month) && 0 != publication.Year {
                  { publication.Month.String() } { strconv.Itoa(publication.Year) }
                } else {
                  { "Any date" }
                }
              </span>
            </h3>
            <label>
              <input id="searchbar" class="searchbar"
                     type="search"
                     name="search"
                     value={ search }
                     placeholder="Search articles..."
                     oninput="searchArticles(this)"
                     hx-get=""
                     hx-trigger="input changed delay:500ms, search"
                     hx-target="#article-results"
                     hx-indicator=".articles-search-loader" />
              <span class="htmx-indicator articles-search-loader"></span>
            </label>
            <div class={ "selected-tag-div", templ.KV("hide", nil == tag) }>
              <span></span>
              <span class="selected-tag icon-tag">
                if nil != tag {
                  { tag.Name }
                }
              </span>
            </div>
          </section>
          <section class="article-results" id="article-results">
            @ui.SearchResults(articles)
          </section>
        </div>
        <aside class="archive-content-aside">
          <section class="topics">
            <header>
              <h3>Topics</h3>
            </header>
            if 0 == len(topics) {
              <small>No topics yet.</small>
            } else {
            <ul id="topics-list" class="topics-list">
              for _, t := range topics {
                if nil != t {
                  <li class={ "topic", templ.KV("selected", nil != topic && topic.ID == t.ID) }>
                    <a href={ templ.SafeURL(fmt.Sprintf("/archive/%s", t.ID)) }
                       onclick="setArchiveTopic(this)"
                       hx-get={ fmt.Sprintf("/archive/%s", t.ID) }
                       hx-push-url="true"
                       hx-trigger="click"
                       hx-target="#article-results"
                    >{ t.Name }</a>
                  </li>
                }
              }
            </ul>
            }
          </section>
          <section class="publications">
            <header>
              <h3>Publications</h3>
            </header>
            if 0 == len(publications) {
              <small>No publications yet.</small>
            } else {
            <ul id="publications-list" class="publications-list">
              for _, p := range publications {
                if nil != p {
                  <li class={ "publication", templ.KV("selected", publication.Month == p.Month && publication.Year == p.Year ) }>
                    <a href={ templ.SafeURL(fmt.Sprintf("/archive/%s/%d/%d", topic.ID, p.Year, p.Month)) }
                       onclick="setArchivePublicationDate(this)"
                       hx-get={ fmt.Sprintf("/archive/%s/%d/%d", topic.ID, p.Year, p.Month) }
                       hx-trigger="click"
                       hx-boost="true"
                       hx-target="#article-results">{ p.Month.String() } { strconv.Itoa(p.Year) }</a>
                  </li>
                }
              }
            </ul>
            }
          </section>
          <section class="tags">
            <header>
              <h3>Tags</h3>
            </header>
            if 0 == len(tags) {
              <small>No tags yet.</small>
            } else {
            <div id="tags-list" class="tags-list">
              for _, t := range tags {
                if nil != t {
                  <span class={ "tag icon-tag", templ.KV("selected", nil != tag && tag.ID == t.ID) }>
                    <a href={ templ.SafeURL(fmt.Sprintf("/archive/tag/%s", t.ID)) }
                       onclick="setArchiveTag(this)"
                       hx-get={ fmt.Sprintf("/archive/tag/%s", t.ID) }
                       hx-trigger="click"
                       hx-boost="true"
                       hx-target="#article-results">
                      { t.Name }
                    </a>
                  </span>
                }
              }
            </div>
            }
          </section>
        </aside>
      </section>
    </section>
  }
}
