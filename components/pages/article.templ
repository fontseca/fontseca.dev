package pages

import(
  "fontseca.dev/components/layout"
  "fontseca.dev/model"
  "strconv"
  "fmt"
)

templ Article(article *model.Article) {
  if nil != article {
    @layout.Layout(article.Title, 3) {
      <section class="article-post">
        <section class="info-section">
          <header>
            <a href="/archive" class="go-back-indicator">Go back to archive</a>
            <h1 class="title">{ article.Title }</h1>
          </header>
          <div class="metadata">
            <p>
              <span>
                <a style="font-weight: 800;" href="/playground?target=/me.get" target="_blank">{ "@" + article.Author }</a>
              </span>
              <span style="font-weight: 500;">
                if nil != article.Topic {
                  <a style="font-weight: 500;" href={ templ.SafeURL(fmt.Sprint("/archive/", article.Topic.ID)) }>{ article.Topic.Name }</a>
                } else {
                  { "No topic" }
                }
              </span>
              <span style="font-weight: 500;">
                  if nil != article.Topic {
                    <time>
                      <a style="font-weight: 500;"
                         href={ templ.SafeURL(fmt.Sprint("/archive/any/", article.PublishedAt.Year(), "/", int(article.PublishedAt.Month()))) }>
                         { article.PublishedAt.Format("January 02, 2006") }
                      </a>
                    </time>
                  } else {
                    { "Draft" }
                  }
              </span>
            </p>
          </div>
        </section>
        <section class="post-content-section post-content-receiver-container">
          <header class="post-header">
            <button type="button" class="link-copier">
              Copy link
            </button>
            <p><i class="ph ph-clock"></i>{ strconv.Itoa(article.ReadTime) } min</p>
          </header>
          <article class={ "content", templ.KV("add-border", 0 < len(article.Tags)) }>
            {! templ.Raw(md2html(article.Content)) }
          </article>
          if 0 < len(article.Tags) {
            <article class="tags-container">
              <header>
                <h3>Tags</h3>
              </header>

              <div class="tags-list">
                for _, t := range article.Tags {
                  if nil != t {
                    <span class="tag icon-tag">
                      <a href={ templ.SafeURL(fmt.Sprint("/archive/tag/", t.ID)) }>{ t.Name }</a>
                    </span>
                  }
                }
              </div>
            </article>
          }
        </section>
      </section>
    }
  }
}
